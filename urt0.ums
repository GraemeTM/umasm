

.section init
    .temps r6, r7
    .zero r0

.section stk
    .space 10000000
    endstack:

.section stk
    .space 10000000
    value_stack:

.section data
    .space 1
    value_stack_depth:

.section init
    r0 := 0
    r2 := endstack


.section text
    main:
        m[r0][value_stack_depth] := 0
        //r5 := m[r0][value_stack_depth]
        //m[r0][value_stack_depth] := r5 + 1

        //output m[r0][value_stack_depth]

    waiting:
        r1 := input()

    waiting_with_character:
        // need to check for EOF (not sure how to do this)
        if (r1 == -1) goto exit using r5

        // branch indirect through jump table
        r5 := jumptable + r1
        r5 := m[r0][r5]
        r4 := r1 - 48                // put actual digit value in r4
        r1 := r5
        r5 := 0                      // r5 gets 0 indicating new numeral
        
        goto r1                      // goto calc40 handling

    entering: 
        r1 := input()
        if (r1 == -1) goto exit using r5

        r5 := jumptable + r1
        r5 := m[r0][r5]
        r4 := r1 - 48               // put digit we want in r4
        r1 := r5
        r5 := 1                     // r5 gets 1 indicating entering
        goto r1

    exit:
        halt